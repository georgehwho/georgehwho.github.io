{"version":3,"sources":["PDFViewer.js","App.js","reportWebVitals.js","index.js"],"names":["PDFViewer","_pdfs$find","selectedPDF","setSelectedPDF","useState","pdfs","name","filename","_jsx","className","children","_jsxs","onClick","closePDF","find","p","src","width","height","title","map","pdf","index","openPDF","App","currentPage","setCurrentPage","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"6NA8DeA,MA3DGA,KAAO,IAADC,EACtB,MAAOC,EAAaC,GAAkBC,mBAAS,MAEzCC,EAAO,CACX,CACEC,KAAM,6BACNC,SAAU,qCAEZ,CACED,KAAM,qCACNC,SAAU,2CAYd,OACEC,cAAA,OAAKC,UAAU,aAAYC,SACvBR,EAcAS,eAAA,OAAKF,UAAU,cAAaC,SAAA,CAC1BC,eAAA,OAAKF,UAAU,aAAYC,SAAA,CACzBF,cAAA,UAAQC,UAAU,WAAWG,QAtBtBC,KACfV,EAAe,OAqBwCO,SAAC,wBAGhDC,eAAA,MAAAD,SAAA,CAAI,YAAoD,QAA3CT,EAACI,EAAKS,KAAKC,GAAKA,EAAER,WAAaL,UAAY,IAAAD,OAAA,EAA1CA,EAA4CK,WAE5DE,cAAA,OAAKC,UAAU,gBAAeC,SAC5BF,cAAA,UACEQ,IAAK,SAAkCd,IACvCe,MAAM,OACNC,OAAO,QACPC,MAAM,oBAzBZR,eAAA,OAAKF,UAAU,WAAUC,SAAA,CACvBF,cAAA,MAAAE,SAAI,mBACJF,cAAA,OAAKC,UAAU,WAAUC,SACtBL,EAAKe,IAAI,CAACC,EAAKC,IACdX,eAAA,OAAiBF,UAAU,WAAWG,QAASA,KAAMW,OAfhDhB,EAewDc,EAAId,cAd3EJ,EAAeI,GADAA,OAesEG,SAAA,CACzEF,cAAA,OAAKC,UAAU,WAAUC,SAAC,iBAC1BF,cAAA,MAAAE,SAAKW,EAAIf,OACTE,cAAA,UAAQC,UAAU,WAAUC,SAAC,eAHrBY,YCKTE,MAjCf,WACE,MAAOC,EAAaC,GAAkBtB,mBAAS,QAE/C,OACEO,eAAA,OAAKF,UAAU,MAAKC,SAAA,CAClBC,eAAA,OAAKF,UAAU,UAASC,SAAA,CACtBF,cAAA,UACEC,UAA2B,SAAhBgB,EAAyB,SAAW,GAC/Cb,QAASA,IAAMc,EAAe,QAAQhB,SACvC,SAGDF,cAAA,UACEC,UAA2B,SAAhBgB,EAAyB,SAAW,GAC/Cb,QAASA,IAAMc,EAAe,QAAQhB,SACvC,YAKc,SAAhBe,EACCd,eAAA,UAAQF,UAAU,aAAYC,SAAA,CAC5BF,cAAA,MAAAE,SAAI,kBACJF,cAAA,MAAAE,SAAI,4BACJF,cAAA,MAAAE,SAAI,kBAGNF,cAACR,EAAS,MAIlB,ECvBe2B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP9B,cAAC+B,IAAMC,WAAU,CAAA9B,SACfF,cAACgB,EAAG,MAENiB,SAASC,eAAe,SAM1Bf,G","file":"static/js/main.c075ea34.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './PDFViewer.css';\n\nconst PDFViewer = () => {\n  const [selectedPDF, setSelectedPDF] = useState(null);\n\n  const pdfs = [\n    {\n      name: \"Intermediate High Unit Two\",\n      filename: \"Intermediate+High+Unit+Two-__.pdf\"\n    },\n    {\n      name: \"Potter's Oracle (Kerkeslager 1998)\",\n      filename: \"Potter's Oracle (Kerkeslager 1998).pdf\"\n    }\n  ];\n\n  const openPDF = (filename) => {\n    setSelectedPDF(filename);\n  };\n\n  const closePDF = () => {\n    setSelectedPDF(null);\n  };\n\n  return (\n    <div className=\"pdf-viewer\">\n      {!selectedPDF ? (\n        <div className=\"pdf-list\">\n          <h2>Available PDFs</h2>\n          <div className=\"pdf-grid\">\n            {pdfs.map((pdf, index) => (\n              <div key={index} className=\"pdf-card\" onClick={() => openPDF(pdf.filename)}>\n                <div className=\"pdf-icon\">üìÑ</div>\n                <h3>{pdf.name}</h3>\n                <button className=\"view-btn\">View PDF</button>\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className=\"pdf-display\">\n          <div className=\"pdf-header\">\n            <button className=\"back-btn\" onClick={closePDF}>\n              ‚Üê Back to PDFs\n            </button>\n            <h3>Viewing: {pdfs.find(p => p.filename === selectedPDF)?.name}</h3>\n          </div>\n          <div className=\"pdf-container\">\n            <iframe\n              src={`${process.env.PUBLIC_URL}/pdfs/${selectedPDF}`}\n              width=\"100%\"\n              height=\"800px\"\n              title=\"PDF Viewer\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PDFViewer;","import React, { useState } from 'react';\nimport \"./App.css\";\nimport PDFViewer from './PDFViewer';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('home');\n\n  return (\n    <div className=\"App\">\n      <nav className=\"App-nav\">\n        <button \n          className={currentPage === 'home' ? 'active' : ''} \n          onClick={() => setCurrentPage('home')}\n        >\n          Home\n        </button>\n        <button \n          className={currentPage === 'pdfs' ? 'active' : ''} \n          onClick={() => setCurrentPage('pdfs')}\n        >\n          PDFs\n        </button>\n      </nav>\n      \n      {currentPage === 'home' ? (\n        <header className=\"App-header\">\n          <h1>HI I'M GEORGE</h1>\n          <h2>IF YOU ARE READING THIS</h2>\n          <h2>I LOVE YOU</h2>\n        </header>\n      ) : (\n        <PDFViewer />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}